name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate:
    name: Validate composer files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Set PHP_CodeSniffer installed paths
        run: phpcs --config-set installed_paths ./path/to/your/sniffs

      - name: Check PHP_CodeSniffer version
        run: phpcs --version

      - name: Run PHPStan
        run: composer phpstan --level max --no-progress --debug

      - name: Run PHPCS
        run: composer phpcs-check --verbose

  tests:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.3']
        dependency-versions: ['lowest', 'highest']

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          if [ "${{ matrix.dependency-versions }}" = "lowest" ]; then
            composer update --prefer-lowest --prefer-dist --no-progress
          else
            composer update --prefer-dist --no-progress
          fi

      - name: Run test suite
        run: vendor/bin/phpunit --coverage-clover coverage.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: true